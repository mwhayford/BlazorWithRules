@page "/member"
@using BlazorApp.Core.Services
@using BlazorApp.Shared.Constants
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = ApplicationRoles.Member)]
@layout MemberLayout
@inject ILoanApplicationService LoanApplicationService
@inject IAuthenticationService AuthService
@rendermode InteractiveServer

<PageTitle>Member Dashboard - BlazorApp</PageTitle>

<div class="row">
    <div class="col-12">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h2>Welcome to Your Dashboard</h2>
            <div class="text-muted">
                <i class="bi bi-calendar me-1"></i>
                @DateTime.Now.ToString("MMMM dd, yyyy")
            </div>
        </div>
    </div>
</div>

@if (loading)
{
    <div class="text-center">
        <div class="spinner-border text-success" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else
{
    <!-- Welcome Message -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="alert alert-success" role="alert">
                <h4 class="alert-heading">
                    <i class="bi bi-check-circle me-2"></i>
                    Welcome, @(currentUser?.FullName ?? "Member")!
                </h4>
                <p class="mb-0">
                    You're successfully logged in to your member portal. 
                    You can apply for loans, track your applications, and manage your profile.
                </p>
            </div>
        </div>
    </div>

    <!-- Quick Actions -->
    <div class="row mb-4">
        <div class="col-md-6">
            <div class="card h-100">
                <div class="card-body text-center">
                    <i class="bi bi-file-earmark-plus text-success" style="font-size: 3rem;"></i>
                    <h5 class="card-title mt-3">Apply for a Loan</h5>
                    <p class="card-text">
                        Start a new loan application with our simple 3-step process.
                    </p>
                    <a href="/member/loan-application" class="btn btn-success">
                        <i class="bi bi-plus-circle me-2"></i>
                        Start Application
                    </a>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card h-100">
                <div class="card-body text-center">
                    <i class="bi bi-file-earmark-text text-primary" style="font-size: 3rem;"></i>
                    <h5 class="card-title mt-3">My Applications</h5>
                    <p class="card-text">
                        View and track the status of your existing loan applications.
                    </p>
                    <a href="/member/my-applications" class="btn btn-primary">
                        <i class="bi bi-eye me-2"></i>
                        View Applications
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Application Statistics -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="card bg-primary text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="card-title">@myApplications.Count</h4>
                            <p class="card-text">Total Applications</p>
                        </div>
                        <div class="align-self-center">
                            <i class="bi bi-file-earmark-text" style="font-size: 2rem;"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-success text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="card-title">@myApplications.Count(a => a.Status == "Approved")</h4>
                            <p class="card-text">Approved</p>
                        </div>
                        <div class="align-self-center">
                            <i class="bi bi-check-circle" style="font-size: 2rem;"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-warning text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="card-title">@myApplications.Count(a => a.Status == "Under Review")</h4>
                            <p class="card-text">Under Review</p>
                        </div>
                        <div class="align-self-center">
                            <i class="bi bi-clock" style="font-size: 2rem;"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-info text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="card-title">@myApplications.Count(a => a.Status == "Draft")</h4>
                            <p class="card-text">Draft</p>
                        </div>
                        <div class="align-self-center">
                            <i class="bi bi-pencil" style="font-size: 2rem;"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Recent Applications -->
    @if (myApplications.Any())
    {
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-clock-history me-2"></i>
                            Your Recent Applications
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Application #</th>
                                        <th>Amount</th>
                                        <th>Status</th>
                                        <th>Date</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var app in myApplications.OrderByDescending(a => a.CreatedAt).Take(5))
                                    {
                                        <tr>
                                            <td>@app.ApplicationNumber</td>
                                            <td>@app.RequestedAmount.ToString("C")</td>
                                            <td>
                                                <span class="badge @GetStatusBadgeClass(app.Status)">
                                                    @app.Status
                                                </span>
                                            </td>
                                            <td>@app.CreatedAt.ToString("MMM dd, yyyy")</td>
                                            <td>
                                                <a href="/member/my-applications/@app.Id" class="btn btn-sm btn-outline-primary">
                                                    <i class="bi bi-eye"></i>
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                        <div class="text-center mt-3">
                            <a href="/member/my-applications" class="btn btn-primary">
                                View All Applications
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-body text-center py-5">
                        <i class="bi bi-file-earmark-plus text-muted" style="font-size: 4rem;"></i>
                        <h4 class="mt-3">No Applications Yet</h4>
                        <p class="text-muted">
                            You haven't submitted any loan applications yet. 
                            Start your first application today!
                        </p>
                        <a href="/member/loan-application" class="btn btn-success btn-lg">
                            <i class="bi bi-plus-circle me-2"></i>
                            Apply for Your First Loan
                        </a>
                    </div>
                </div>
            </div>
        </div>
    }
}

@code {
    private bool loading = true;
    private ApplicationUser? currentUser;
    private List<LoanApplicationDto> myApplications = new();

    protected override async Task OnInitializedAsync()
    {
        currentUser = await AuthService.GetCurrentUserAsync();
        await LoadMyApplications();
        loading = false;
    }

    private async Task LoadMyApplications()
    {
        try
        {
            if (currentUser != null)
            {
                // For now, we'll get all applications since we don't have user-specific filtering yet
                // In a real app, you'd filter by currentUser.Id
                var allApplications = await LoanApplicationService.GetAllAsync();
                myApplications = allApplications.ToList();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading applications: {ex.Message}");
        }
    }

    private string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "Approved" => "bg-success",
            "Rejected" => "bg-danger",
            "Under Review" => "bg-warning",
            "Submitted" => "bg-info",
            "Draft" => "bg-secondary",
            _ => "bg-secondary"
        };
    }
}
