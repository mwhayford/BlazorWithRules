@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.AspNetCore.Components.Web

<CascadingAuthenticationState>
    <ErrorBoundary>
        <Router AppAssembly="typeof(Program).Assembly">
            <Found Context="routeData">
                <AuthorizeRouteView RouteData="routeData" DefaultLayout="typeof(Layout.MainLayout)">
                    <NotAuthorized>
                        @if (context.User.Identity?.IsAuthenticated != true)
                        {
                            <RedirectToLogin />
                        }
                        else
                        {
                            <div class="container mt-5">
                                <div class="row justify-content-center">
                                    <div class="col-md-6 text-center">
                                        <i class="bi bi-shield-exclamation display-1 text-danger"></i>
                                        <h1 class="display-4 fw-bold">Access Denied</h1>
                                        <p class="fs-3"><span class="text-danger">Sorry!</span> You don't have permission to access this page.</p>
                                        <p class="lead">Please contact an administrator if you believe this is an error.</p>
                                        <a href="/" class="btn btn-primary">
                                            <i class="bi bi-house"></i> Go Home
                                        </a>
                                    </div>
                                </div>
                            </div>
                        }
                    </NotAuthorized>
                    <Authorizing>
                        <div class="container mt-5">
                            <div class="row justify-content-center">
                                <div class="col-md-6 text-center">
                                    <div class="spinner-border text-primary" role="status">
                                        <span class="visually-hidden">Loading...</span>
                                    </div>
                                    <p class="mt-2">Checking permissions...</p>
                                </div>
                            </div>
                        </div>
                    </Authorizing>
                </AuthorizeRouteView>
                <FocusOnNavigate RouteData="routeData" Selector="h1" />
            </Found>
            <NotFound>
                <PageTitle>Not found</PageTitle>
                <LayoutView Layout="typeof(Layout.MainLayout)">
                    <div class="container mt-5">
                        <div class="row justify-content-center">
                            <div class="col-md-6 text-center">
                                <i class="bi bi-exclamation-triangle display-1 text-warning"></i>
                                <h1 class="display-4 fw-bold">404</h1>
                                <p class="fs-3"><span class="text-danger">Oops!</span> Page not found.</p>
                                <p class="lead">The page you're looking for doesn't exist.</p>
                                <a href="/" class="btn btn-primary">
                                    <i class="bi bi-house"></i> Go Home
                                </a>
                            </div>
                        </div>
                    </div>
                </LayoutView>
            </NotFound>
        </Router>
    </ErrorBoundary>
</CascadingAuthenticationState>

@code {
    private class RedirectToLogin : ComponentBase
    {
        [Inject] private NavigationManager Navigation { get; set; } = default!;

        protected override void OnInitialized()
        {
            Navigation.NavigateTo("/login", forceLoad: true);
        }
    }
}